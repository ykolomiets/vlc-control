mixin common-player-control(player)
  - const controlId = `player-control-${player.id}`
  div
    form(
      id=controlId,
      hx-patch=`/players/${player.id}`,
      hx-trigger=`change from:(#${controlId} input, #${controlId} select) changed`,
      hx-include='this',
      hx-swap='morph:{ignoreActive:true}'
    )
      label(for=`audiotrack-selector-${player.id}`) Audiotrack:
      if player.audiotracks
        select(
          id=`audiotrack-selector-${player.id}`
          name='audiotrack'
        )
          each track in player.audiotracks
            option(value=track.id, selected=track.selected) #{track.title}
      else
        .tooltip
          img(
            src='/static/icons/circle-attention.svg',
            alt='N/A'
          )
          span.tooltiptext Your version of VLC player requires you to select audiotracks manually via player's UI

      label(for=`audiodevice-selector-${player.id}`) Audio Device:
      if player.audiodevices
        select(
          id=`audiodevice-selector-${player.id}`
          name='audiodevice'
        )
          each device in player.audiodevices
            option(value=device.id, selected=device.selected) #{device.name}
      else
        .tooltip
          img(
            src='/static/icons/circle-attention.svg',
            alt='N/A'
          )
          span.tooltiptext Your version of VLC player requires you to select audiodevice manually via player's UI

      label(for=`volume-input-${player.id}`) Volume:
      input(
        id=`volume-input-${player.id}`
        type='range',
        name='volume',
        min=0, 
        max=512,
        value=player.volume,
      )
    button(
      id=`close-player-${player.id}`
      hx-delete=`/players/${player.id}`
    ) Close

section(
  hx-get='/control-panel',
  hx-trigger='load, every 1s',
  hx-target='this',
  hx-swap='morph:{ignoreActive:true}'
)
  if !mainPlayer
    button#start-main-player-btn(hx-post='/main-player') Start main player
  else
    div#main-player-control.player-control
      button(
        hx-post='/toggle-pause',
        hx-swap='morph:{ignoreActive:false}'
      )
        img(
          src='/static/icons/' + (mainPlayer.state === 'playing' ? 'pause.svg' : 'play.svg'),
          alt=(mainPlayer.state === 'playing' ? 'pause' : 'play')
        )
      button(
        hx-post='/toggle-fullscreen',
        hx-swap='morph:{ignoreActive:false}'
      )
        img(
          src='/static/icons/' + (mainPlayer.fullscreen ? 'fullscreen-exit.svg' : 'fullscreen.svg'),
          alt='toggle fullscreen'
        )
      button(
        hx-post='/synchronize-players'
      ) Sync players
      if mainPlayer.subtitletracks
        label(for='subtitles-selector') Subtitles:
        select(
          id='subtitles-selector'
          name='subtitletrack'
          hx-patch=`/players/${mainPlayer.id}`
        )
          each track in mainPlayer.subtitletracks
            option(value=track.id, selected=track.selected) #{track.title}
    +common-player-control(mainPlayer)
  each player in secondaryPlayers
    +common-player-control(player)
  if maxPlayers > secondaryPlayers.length + 1
    button#add-secondary-player-btn(hx-post='/secondary-player') Add secondary player

